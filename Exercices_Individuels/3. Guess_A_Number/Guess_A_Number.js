// Etape 1:

// randomNumber = window.prompt("Veuillez choisir un nombre, s'il vous pla√Æt !");

// let givenNumber = randomNumber;

// // Etape 2:

// function didIWin(givenNumber) {
//     if (givenNumber < 22) {
//     return "Plus grand";
//     } 
//     else if (givenNumber > 22) {
//     return "Plus petit";
//     }
//     else {
//     return "Bravo ! Vous avez devin√© le nombre";
//     }
// }

// let result = givenNumber;

// alert(didIWin(givenNumber))

// // Etape 3:

// function gamePlay(statement) {
//     if(result == 22) {
//         return True;
//     } 
//     else {
//         return False;
//     }
// }

// alert(gamePlay(result))

// Etape 3:
// let randomNumber = window.prompt("Veuillez choisir un nombre, s'il vous pla√Æt !");

// function didIWin(givenNumber) {
//     if (givenNumber == 22) {
//         return true;
//     } 
//     else {
//         return false;
//     }
// }

// function gamePlay() {
//     while (didIWin(randomNumber) == false) {
//         randomNumber = window.prompt("Veuillez choisir un nombre, s'il vous pla√Æt !");
//     }
// }

// gamePlay()

// Etape 4: 

// Cr√©er une fonction qui demande au joueur 1 de fournir un nombre √† deviner compris entre 0 et 50 tant qu‚Äôil ne respecte pas ce range.
// La fonction didIWin doit prendre d√©sormais un autre param√®tre, le nombre √† deviner.
// Reprenez la logique 1, 2 et 3 pour g√©rer la partie et lui indiquer s‚Äôil doit continuer √† jouer ou s‚Äôil a gagn√©.

// let randomNumber = parseInt(window.prompt("Veuillez choisir un nombre entre 0 et 50, s'il vous pla√Æt !"));

// let givenNumber = parseInt(window.prompt("Veuillez trouver le nombre entre 0 et 50 que le joueur 1 a choisis !"));

// function didIWin(numberToGuess,answer) {
//     if (numberToGuess == answer) {
//         alert("F√©licitations ! Vous avez trouv√© le bon nombre !");
//         return true;
//     } 
//     else {
//         alert("Ce n'est pas bon, essayes encore !") ;
//         return false;
//     }   
// }

// function gamePlay() {
//     while(didIWin(randomNumber, givenNumber) == false) {
//         randomNumber = window.prompt("Veuillez choisir un nombre entre 0 et 50, s'il vous pla√Æt !");
//     }
// }

// gamePlay();

// Etape 6: 

// Si le nombre propos√© par l‚Äôutilisateur est plus petit que le nombre √† deviner, alors vous changerez le range minimal. Ce ne sera plus 10 mais le dernier nombre propos√©. Attention si le nombre propos√© est en dessous du range minimal, cela ne sert √† rien de le changer.

// Ex : 12 < ? < 45, si le nombre propos√© est 10, on ne change pas le range. Mais on peut afficher une alert pour indiquer que le nombre propos√© n‚Äôest pas dans le range.

// M√™me chose si le nombre est sup√©rieur.


let givenNumber, currentMin, currentMax, count;
let inputField, message, inputRangeParagraph, submitBtn, restartBtn;

// Initialisation du jeu
function initGame() {
    // Demande au joueur 1
    do {
        givenNumber = parseInt(prompt("Joueur 1 : choisissez un nombre entre 0 et 50, s'il vous pla√Æt !"));
    } while (isNaN(givenNumber) || givenNumber <= 0 || givenNumber >= 50);

    // R√©initialise l‚Äô√©tat
    currentMin = 0;
    currentMax = 50;
    count = 0;

    // R√©affiche les bons √©l√©ments
    message.style.display = "none";
    message.innerHTML = "";
    restartBtn.style.display = "none";
    submitBtn.disabled = false;

    updateRangeDisplay();
}

// Met √† jour le paragraphe HTML avec les bornes dynamiques
function updateRangeDisplay() {
    const min = currentMin;
    const max = currentMax;

    inputRangeParagraph.innerHTML = `${min} < <input id="number" type="number" min="${min + 1}" max="${max - 1}" /> < ${max}`;

    // R√©assigne l'input
    inputField = document.getElementById("number");

    // Ajoute un support pour appuyer sur "Entr√©e"
    inputField.addEventListener("keypress", function (e) {
        if (e.key === "Enter") {
            gamePlay();
        }
    });
}

// Fonction de jeu principal
function gamePlay() {
    const value = parseInt(inputField.value.trim());
    message.style.display = "block";
    message.innerHTML = "";

    if (isNaN(value)) {
        message.innerHTML = `‚ùó Veuillez entrer un nombre valide.`;
        return;
    }

    if (value <= currentMin || value >= currentMax) {
        message.innerHTML = `‚ö†Ô∏è Le nombre est hors de la plage actuelle : ${currentMin} < ? < ${currentMax}`;
        return;
    }

    count++;

    if (value === givenNumber) {
        inputRangeParagraph.innerHTML = "";
        message.innerHTML = `<p>üéâ Bravo ! Trouv√© en ${count} tentative(s) !</p>`;
        submitBtn.disabled = true;
        restartBtn.style.display = "inline-block";
        return;
    }

    // Met √† jour la plage dynamique
    if (value < givenNumber && value > currentMin) {
        currentMin = value;
    } else if (value > givenNumber && value < currentMax) {
        currentMax = value;
    }

    updateRangeDisplay();
    message.innerHTML = `‚ùå Mauvais nombre. Tentative n¬∞${count}`;
    inputField.value = "";
}

// Initialisation apr√®s chargement DOM
window.addEventListener("DOMContentLoaded", () => {
    // S√©lection des √©l√©ments
    inputRangeParagraph = document.getElementById("input-range-paragraph");
    message = document.querySelector(".player2");
    submitBtn = document.getElementById("submit");
    restartBtn = document.getElementById("restart");

    // Bouton Valider
    submitBtn.addEventListener("click", gamePlay);

    // Bouton Rejouer
    restartBtn.addEventListener("click", initGame);

    // Lancer premi√®re partie
    initGame();
});





